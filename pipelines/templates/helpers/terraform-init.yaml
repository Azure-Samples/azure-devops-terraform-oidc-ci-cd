---
parameters:
  - name: serviceConnection
  - name: backendAzureResourceGroupName
  - name: backendAzureStorageAccountName
  - name: backendAzureStorageAccountContainerName
  - name: backendAzureStorageAccountContainerKeyName
    default: terraform.tfstate
  - name: root_module_folder_relative_path
    default: '.'

steps:
  - task: AzureCLI@2
    displayName: 'Terraform Init'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        # Logout of Azure CLI to prove we are not using that auth method
        az logout

        $env:ARM_TENANT_ID = $env:AZURESUBSCRIPTION_TENANT_ID
        $env:ARM_CLIENT_ID =  $env:AZURESUBSCRIPTION_CLIENT_ID
        $env:ARM_OIDC_AZURE_SERVICE_CONNECTION_ID = $env:AZURESUBSCRIPTION_SERVICE_CONNECTION_ID
        $env:ARM_USE_OIDC = "true"

        $arguments = @()
        $arguments += "-chdir=${{ parameters.root_module_folder_relative_path }}"
        $arguments += "init"
        $arguments += "-backend-config=storage_account_name=$($env:BACKEND_AZURE_STORAGE_ACCOUNT_NAME)"
        $arguments += "-backend-config=container_name=$($env:BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME)"
        $arguments += "-backend-config=key=$($env:BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_KEY_NAME)"
        $arguments += "-backend-config=use_azuread_auth=true"

        # Run terraform init
        $command = "terraform"
        Write-Host "Running: $command $arguments"
        & $command $arguments

    env:
      BACKEND_AZURE_RESOURCE_GROUP_NAME: ${{ parameters.backendAzureResourceGroupName }}
      BACKEND_AZURE_STORAGE_ACCOUNT_NAME: ${{ parameters.backendAzureStorageAccountName }}
      BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME: ${{ parameters.backendAzureStorageAccountContainerName }}
      BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_KEY_NAME: ${{ parameters.backendAzureStorageAccountContainerKeyName }}
      ARM_OIDC_REQUEST_TOKEN: $(System.AccessToken)
